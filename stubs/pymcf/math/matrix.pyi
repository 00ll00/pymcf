from .fixed import Fixed as Fixed
from .math import Numeric as Numeric
from numbers import Number
from pymcf import mcfunction as mcfunction
from pymcf.data import InGameData as InGameData
from typing import Any, List, Optional, Sequence, Tuple, Type, TypeVar, Union, Generic

T_V = TypeVar('T_V', bound=Numeric)

class Mat2D(InGameData, Generic[T_V]):
    w: int
    h: int
    size: int
    dtype: Type[T_V]
    data: List[T_V]
    def __init__(self, w: int, h: int, dtype: Type[T_V] = ..., values: Optional[List[Union[T_V, Any]]] = ...) -> None: ...
    def copy_to(self, other: Mat2D): ...
    def copy(self): ...
    def set_value(self, values: Union['Mat2D', Sequence[Union[Number, Numeric]]]): ...
    def __len__(self) -> int: ...
    def __getitem__(self, index: Tuple[int, int]) -> T_V: ...
    def __setitem__(self, index, value) -> None: ...
    def __iadd__(self, other) -> None: ...
    def __isub__(self, other) -> None: ...
    def __imul__(self, other) -> None: ...
    def __ifloordiv__(self, other) -> None: ...
    def __itruediv__(self, other) -> None: ...
    def __matmul__(self, other): ...
