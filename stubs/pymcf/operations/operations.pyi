from abc import ABC
from pymcf.mcversions import MCVer as MCVer
from pymcf.project import Project as Project
from pymcf.entity import Identifier


class Operation(ABC):
    offline: bool
    def __init__(self, offline: bool = ...) -> None: ...
    def get_length(self, mcver: MCVer) -> int: ...
    def gen_code(self, mcver: MCVer) -> str: ...

class InsertRawOp(Operation):
    code: str
    def __init__(self, code: str, offline: bool = ...) -> None: ...
    def gen_code(self, mcver: MCVer) -> str: ...

def raw(code: str): ...

class CallFunctionOp(Operation):
    func_full_name: str
    def __init__(self, func_full_name: str, offline: bool = ...) -> None: ...
    def gen_code(self, mcver: MCVer) -> str: ...

class CallMethodOp(Operation):
    origin_identifier: Identifier
    func_full_name: str
    def __init__(self, origin_identifier, func_full_name: str, offline: bool = ...) -> None: ...
    def gen_code(self, mcver: MCVer) -> str: ...
